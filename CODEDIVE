how clang works
----------------------------
    clang is a compiler, written in C++, good diagnostics
g++ example.cpp
clang++ example.cpp
    libclang has well designed AST, intended for building tools
wget https://github.com/llvm-mirror/clang/archive/master.zip
python clang-master/bindings/python/examples/cindex/cindex-dump.py example.cpp | less
python clang-master/bindings/python/examples/cindex/cindex-includes.py /usr/include/stdint.h | less

binding with ctypes
----------------------------
    foo library
vim foo.hpp
vim foo.cpp
./cfoo.sh
readelf -a libfoo.so
./cmain.sh && ./a.out
    open and close
./foo1_open.py
    arg types control
./foo2_args.py
    access global variable
./foo3_glovar.py
    pass by pointer
./foo4_byref.py
    vector class hourglassing
./foo5_intvec.py

clang binding explained
----------------------------
    hourglass C-API with binding
vim clang-master/include/clang-c/Index.h
vim clang-master/bindings/python/clang/cindex.py
    source itself
vim clang-master/bindings/python/examples/cindex/cindex-dump.py
vim clang-master/bindings/python/examples/cindex/cindex-includes.py

================================

ctypes
https://docs.python.org/2/library/ctypes.html

libffi
https://en.wikipedia.org/wiki/Libffi

foo = ctypes.cdll.LoadLibrary('libfoo.so')
_ctypes.dlclose(foo._handle)

func.argtypes = item[1]
def _as_parameter_
def from_param

func.restype = item[2]
func.errcheck = item[3]
